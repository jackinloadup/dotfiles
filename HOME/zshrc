# Path to your oh-my-zsh configuration.
export ZSH=$HOME/.oh-my-zsh

bindkey "^B" history-beginning-search-backward

# dont use oh-my-zsh auto complete
unsetopt correct_all

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
export ZSH_THEME="lukerandall"
export LANG=en_US.UTF-8

# Set to this to use case-sensitive completion
# export CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
export DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# export DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# export DISABLE_AUTO_TITLE="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)

source ~/.zshrc_helpers

export EDITOR="vim"

# get information about system
is_mac=$(detect_mac)

if [[ $is_mac == "yes" ]]; then
  plugins+=(brew osx)
fi

# this is a great place to store local settings like $PATH
if [[ -e $HOME/.bash_profile ]]; then
  source $HOME/.bash_profile
fi

# for the lulz
alias hack="cat /dev/urandom | hexdump"

if [[ $is_mac == "yes" ]] || [[ $(hostname) == "k-lmriutzel" ]]; then

  plugins+=(django)


  alias pub1='ssh pub1 -t su -c "tmux\ a" root'
  alias pub1d='ssh pub1 -t su -c "tmux\ a\ -d" root'
  alias wi='ssh wi -t tmux a'
  alias toph='ssh toph -t su'
  alias nana='ssh nana -t tmux a'
  alias opus='ssh opus -t su -c "tmux\ a" root'

  # tool to scan barcodes
  if type "zbarcam" &> /dev/null; then
    alias barcode="LD_PRELOAD=/usr/lib/libv4l/v4l2convert.so zbarcam"
  fi

  # if phpcs is installed lets assume the code stanards tool is installed
  if type "phpcs" &> /dev/null; then
    alias drupalcs="phpcs --standard=$(pear config-get php_dir)/PHP/CodeSniffer/Standards/Drupal/ruleset.xml --extensions=php,module,inc,install,test,profile,theme media.module"
  fi
fi

# if tmux make force get zsh to not be stupid and use 256 color mode
if [[ ${+TMUX} == 1 ]]; then
  export TERM=screen-256color
elif [[ ${TERM} != "xterm-256color" ]]; then
  if [[ $(toe /usr/share/terminfo | grep -o 'xterm-256color' | tr -s ' ') == 'xterm-256color' ]]; then
    export TERM='xterm-256color'
  fi
fi

unsetopt correct_all

setopt autopushd

# override oh-my-zsh function
function git_prompt_info() {
  ref=$(git symbolic-ref HEAD 2> /dev/null)
  if [[ $ref == refs* ]]; then
    git="${ref#refs/heads/}"
  elif [[ -n $(git describe --exact-match HEAD 2> /dev/null) ]]; then
    git=$(git describe --exact-match HEAD 2> /dev/null)
  elif [[ -n $(git describe HEAD 2> /dev/null) ]]; then
    git=$(git describe HEAD | sed "s/.\{9\}$//g" | sed "s/-/+/"  2> /dev/null)
  fi

  if [[ $git =~ .+ ]]; then
    echo "$ZSH_THEME_GIT_PROMPT_PREFIX$git$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_SUFFIX";
  fi
}

# override lukerandall theme function
function my_git_prompt_info() {
  ref=$(git symbolic-ref HEAD 2> /dev/null)
  if [[ $ref == refs* ]]; then
    git="${ref#refs/heads/}"
  elif [[ -n $(git describe --exact-match HEAD 2> /dev/null) ]]; then
    git=$(git describe --exact-match HEAD 2> /dev/null)
  elif [[ -n $(git describe HEAD 2> /dev/null) ]]; then
    git=$(git describe HEAD | sed "s/.\{9\}$//g" | sed "s/-/+/"  2> /dev/null)
  fi

  GIT_STATUS=$(git_prompt_status)
  [[ -n $GIT_STATUS ]] && GIT_STATUS=" $GIT_STATUS"

  if [[ $git =~ .+ ]]; then
    echo "$ZSH_THEME_GIT_PROMPT_PREFIX$git$GIT_STATUS$ZSH_THEME_GIT_PROMPT_SUFFIX";
  fi
}

source $ZSH/oh-my-zsh.sh

source /usr/lib/python3.4/site-packages/powerline/bindings/zsh/powerline.zsh

# Less Colors for Man Pages
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline
