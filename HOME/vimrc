"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Maintainer:
"     Lucas Riuyzel - lriutzel@gmail.com (aka jackinloadup)
"
" WhereToGet:
"     Get the latest version of this vimrc as well as plugins
"     Also checkout my configuration for zsh, tmux, and more
"     https://github.com/jackinloadup/dotfiles
"
" Credits:
"     Amir Salihefendic - http://amix.dk - amix@amix.dk
"     http://amix.dk/vim/vimrc.html
"
" Sections:
"     -> General
"     -> VIM user interface
"     -> Colors and Fonts
"     -> Files and backups
"     -> Text, tab and indent related
"     -> Visual mode related
"     -> Moving around, tabs and buffers
"     -> Status line
"     -> Editing mappings
"     -> vimgrep searching and cope displaying
"     -> Spell checking
"     -> Misc
"     -> Helper functions
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"call pathogen
call pathogen#infect()
"call pathogen#helptags()

" Sets how many lines of history VIM has to remember
set history=700

" Enable filetype plugin
filetype indent on
filetype plugin on

" Set to auto read when a file is changed from the outside
set autoread

" Set backup directory to be in the user home folder.
set backupdir=~/.tmp
set swapfile
set dir=~/.tmp

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader = ","
let g:mapleader = ","

" Fast saving
nmap <leader>w :w!<cr>

" Console log from insert mode; Puts focus inside parentheses
imap cll console.log();<Esc>==f(a
" Console log from visual mode on next line, puts visual selection inside parentheses
vmap cll yocll<Esc>p
" Console log from normal mode, inserted on next line with word your on inside parentheses
nmap cll yiwocll<Esc>p 


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" enable syntax
syntax on
set backspace=indent,eol,start

set laststatus=2
set encoding=utf-8

set nomodeline
set nocompatible

set pastetoggle=<f2>
set autoindent
set smartindent

""""""""""""""""""""""""""""""""""
" User interface
""""""""""""""""""""""""""""""""""

set number
"set relativenumber
set list

" Set 7 lines to the curors - when moving vertical
set so=7

" search
set incsearch " instantly display search results
set ignorecase " Ignore case when searching
set smartcase " unless search contains uppercase letter
set hlsearch " highlight all search results

set showmatch "Show matching bracets when text indicator is over them

"set listchars=eol:↵
if has("multi_byte")
  set listchars=eol:¶,tab:˾˾,trail:˽,extends:↦,precedes:↤,nbsp:˽
else
  set listchars=eol:$,tab:>-,trail:-,extends:>,precedes:<,nbsp:%
endif

" Theme
set t_Co=256
set background=dark
let g:molokai_original=0
colorscheme molokai

if has('gui_running')
  set guicursor+=a:blinkon0       " Cursor doesn't blink - it's annoying
  set guioptions-=m               " No Menubar
  set guioptions-=T               " No Toolbar
  set guioptions-=l               " No Scrollbar left
  set guioptions-=L               " No Scrollbar left when split
  set guioptions-=r               " No Scrollbar right
  set guioptions-=r               " No Scrollbar right when split

  set laststatus=2                " always show statusline

  set gfn=Monaco\ for\ Powerline\ 10

  set lines=40                    " Height
  set columns=85                  " Width
endif

let &colorcolumn="80,".join(range(120,999),",")

""""""""""""""""""""""""""""""""""
" Editor
""""""""""""""""""""""""""""""""""

" Tab settings
set expandtab
set softtabstop=2
set shiftwidth=2

" Fold Settings
set foldmethod=syntax
set foldminlines=0
set foldlevelstart=0

" Keyboard settings

" allow jk to take you out of insert mode
imap jk <Esc>

" C-r in visual mode will pull the selected text into a replace statement
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>

" disable arrow keys
"map <up> <nop>
"map <down> <nop>
"map <left> <nop>
"map <right> <nop>

"let javaScript_fold=1
"autocmd FileType javascript call JavaScriptFold()

" autocomplete settings
imap <c-space> <c-x><c-o>
autocmd FileType css setl omnifunc=csscomplete#CompleteCSS
autocmd FileType javascript setl omnifunc=javascriptcomplete#CompleteJS
autocmd FileType php setl omnifunc=phpcomplete#CompletePHP
autocmd FileType html,xhtml setl omnifunc=htmlcomplete#CompleteTags

if has("autocmd")
  " Drupal *.module and *.install files.
  augroup module
    autocmd BufRead,BufNewFile *.module set filetype=php
    autocmd BufRead,BufNewFile *.install set filetype=php
    autocmd BufRead,BufNewFile *.test set filetype=php
    autocmd BufRead,BufNewFile *.inc set filetype=php
    autocmd BufRead,BufNewFile *.profile set filetype=php
    autocmd BufRead,BufNewFile *.view set filetype=php
  augroup END

  "if v:version >= 740
  "  autocmd InsertEnter * :set norelativenumber
  "  autocmd InsertLeave * :set relativenumber
  "  autocmd FocusLost * :set norelativenumber
  "  autocmd FocusGained * :set relativenumber
  "else
    autocmd InsertEnter * :set number
  "  autocmd InsertLeave * :set relativenumber
    autocmd FocusLost * :set number
  "  autocmd FocusGained * :set relativenumber
  "endif
endif

let g:syntastic_php_phpcs_args=" --standard=Drupal --extensions=php,module,inc,install,test,profile,theme"

if has('statusline')
  set laststatus=2
  " Broken down into easily includeable segments
  set statusline=%<%f\    " Filename
  set statusline+=%w%h%m%r " Options
  set statusline+=%{fugitive#statusline()} "  Git Hotness
  set statusline+=\ [%{&ff}/%Y]            " filetype
  "set statusline+=\ [%{getcwd()}]          " current dir
  set statusline+=%#warningmsg#
  set statusline+=%{SyntasticStatuslineFlag()}
  set statusline+=%*
  let g:syntastic_enable_signs=1
  set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
endif

" forgot sudo.. no problem
cmap w!! %!sudo tee > /dev/null %

" sparkup settings
let g:sparkupArgs = '--no-last-newline --indent-spaces=2'

" MOUSE

if has("mouse")
  set mouse=a
  set ttymouse=xterm2
endif

" toggle text and mouse settings for easy copying
nmap <ESC>' :set list!<CR> :set nonumber<CR> :set norelativenumber<CR> :call ToggleMouse()<CR>

function! ToggleMouse()
  if &mouse == 'a'
    set mouse=
    echo "Mouse usage disabled"
  else
    set mouse=a
    echo "Mouse usage enabled"
  endif
endfunction
